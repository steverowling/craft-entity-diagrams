{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Entity Diagrams plugin for Craft CMS 4.x
 *
 * Entity Diagrams index.twig
 *
 * @author    Steve Rowling
 * @copyright Copyright (c) 2022 Steve Rowling
 * @link      https://springworks.co.uk
 * @package   EntityDiagrams
 * @since     1.0.0
 */
#}

{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{# The title of this CP section #}
{% set title = "Entity Diagrams" %}

{% set config = craft.app.config.getConfigFromFile('entity-diagrams') %}

{# The content of the CP Section#}
{% set content %}
    <p>Generate diagrams which show how the different parts of the system work together.</p>

    <p>Choose from pre-defined Document Groups (sets of elements specified in the <code>developer-documentation.php</code> config file), or show all elements of the system.</p>

    <form action="" method="post" class="">
        <hr>
        {% if config['docGroups'] is defined and config['docGroups'] %}
            {% set fieldOptions = [
                {
                    'label': 'Choose…',
                    'value': '',
                }
            ] %}

            {% for docGroup in config['docGroups']|keys %}
                {% set fieldOptions = fieldOptions|merge([
                    {
                        'label': docGroup,
                        'value': docGroup,
                    }
                ]) %}
            {% endfor %}

            {{ forms.selectField({
                handle:'docGroup',
                name:'docGroup',
                label:'Document Group',
                instructions: 'Generate a diagram for the selected Document Group',
                value: '',
                options: fieldOptions,
            }) }}

            <p>or …</p>
            <hr>
        {% endif %}

        <p>Choose which elements to include in the diagram:</p>

        <div class="flex" style="display: flex; justify-content: space-between; flex-wrap: wrap; align-items: flex-start;">
            {% set fieldOptions = [
                {
                    'label': 'All',
                    'value': '*',
                },
                {
                    'label': 'None',
                    'value': '',
                },
            ] %}

            {{ forms.selectField({
                handle:'sections',
                name:'sections',
                id: 'sections',
                label:'Sections',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {{ forms.selectField({
                handle:'categories',
                name:'categories',
                id: 'categories',
                label:'Category Groups',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {{ forms.selectField({
                handle:'globals',
                name:'globals',
                id: 'globals',
                label:'Globals',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {{ forms.selectField({
                handle:'userGroups',
                name:'userGroups',
                id: 'userGroups',
                label:'User Groups',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {{ forms.selectField({
                handle:'tags',
                name:'tags',
                id: 'tags',
                label:'Tag Groups',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {{ forms.selectField({
                handle:'volumes',
                name:'volumes',
                id: 'volumes',
                label:'Asset Volumes',
                instructions: '',
                value: '*',
                required: false,
                options: fieldOptions,
                fieldAttributes: {
                    style: 'margin-bottom: 1em;'
                }
            }) }}

            {% if craft.entityDiagrams.isCommerceEnabled %}
                {{ forms.selectField({
                    handle:'products',
                    name:'products',
                    id: 'products',
                    label:'Product Types',
                    instructions: '',
                    value: '*',
                    required: false,
                    options: fieldOptions,
                    fieldAttributes: {
                        style: 'margin-bottom: 1em;'
                    }
                }) }}
            {% endif %}
        </div>


        {% set settings = craft.app.plugins.plugin('entity-diagrams').getSettings() %}

        {% set options = settings['options'] %}

        <p><strong>Options</strong></p>
        {% for handle, value in settings['options'] %}
            {{ forms.checkboxField({
                label: handle|snake|replace({'_':' '})|capitalize,
                name: 'options['~handle~']',
                id: handle,
                value: 1,
                checked: value})
            }}
        {% endfor %}

        <hr>

        <div class="flex flex-nowrap" style="display: flex; justify-content: flex-start; align-items: flex-end; margin-bottom: 1em;">
            {% set fieldOptions = [
                {
                    'label': 'Left -> Right',
                    'value': 'LR',
                },
                {
                    'label': 'Top -> Bottom',
                    'value': 'TB',
                },
            ] %}

            {{ forms.selectField({
                handle:'rankDir',
                name:'dotOptions[rankDir]',
                id: 'rankDir',
                label:'Rank Direction',
                instructions: '',
                value: '',
                required: false,
                options: fieldOptions,
            }) }}

            {% set fieldOptions = [
                {
                    label: 'Splines',
                    value: 'splines',
                },
                {
                    label: 'Compound',
                    value: 'compound',
                },
                {
                    label: 'Orthogonal',
                    value: 'ortho',
                },
                {
                    label: 'Polyline',
                    value: 'polyline',
                },
                {
                    label: 'Curved',
                    value: 'curved',
                },
                {
                    label: 'Line',
                    value: 'line',
                },
            ] %}

            {{ forms.selectField({
                handle:'splines',
                name:'dotOptions[splines]',
                id: 'splines',
                label:'Link Style',
                instructions: '',
                value: '',
                options: fieldOptions,
            }) }}
        </div>

        <div>
            <button type="submit" class="submit btn" id="generateDiagram">
                Generate diagram
            </button>
        </div>

    </form>

    <div style="width: 100%; height: 80vh; margin: 2em 0;">
        <iframe src="{{ craft.app.config.general.cpTrigger }}/entity-diagrams/diagram" style="width: 100%; height: 100%;" id="diagram"></iframe>
    </div>

    <script>
        (function() {
            'use strict';

            let generateFormBtn = document.querySelector('#generateDiagram');
            let iframe = document.querySelector('#diagram');

            if (generateFormBtn && iframe) {
                generateFormBtn.addEventListener('click', function(ev) {
                    ev.preventDefault();
                    ev.stopPropagation();

                    let form = ev.target.closest('form');

                    let formFields = form.querySelectorAll('[name]');

                    let url = iframe.src.split('?')[0];
                    let data = '?';
                    let isFirst = true;

                    Array.prototype.forEach.call(formFields, function(field) {
                        let value;

                        switch (field.nodeName) {
                            case 'INPUT':
                                switch(field.getAttribute('type')) {
                                    case 'radio':
                                    case 'checkbox':
                                        value = field.checked && field.value ? field.value : 0;
                                        break;

                                    default:
                                        value = field.value;
                                }
                                break;

                            case 'SELECT':
                                value = field.value;
                                break;

                            default:
                        }

                        data += (!isFirst ? '&' : '') + field.name + '=' + value;
                        isFirst = false;
                    });

                    url += data;

                    iframe.src = url;
                });
            }

        })();
    </script>
{% endset %}
